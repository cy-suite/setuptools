[mypy]
# CI should test for all versions, local development gets hints for oldest supported
# But our testing setup doesn't allow passing CLI arguments, so local devs have to set this manually.
# python_version = 3.8
strict = False
warn_unused_ignores = True
warn_redundant_casts = True
# required to support namespace packages: https://github.com/python/mypy/issues/14057
explicit_package_bases = True
exclude = (?x)(
	^build/
	| ^.tox/
	| ^.eggs/
	| ^pkg_resources/tests/data/my-test-package-source/setup.py$ # Duplicate module name
	| ^setuptools/_vendor/ # Vendored
	| ^setuptools/_distutils/ # Vendored
	| ^setuptools/config/_validate_pyproject/ # Auto-generated
	)
# Too many false-positives
disable_error_code = overload-overlap

# DistributionMetadata.license_files and DistributionMetadata.license_file
# are dynamically patched in setuptools/_core_metadata.py
# and no DistributionMetadata subclass exists in setuptools
[mypy-setuptools.*]
disable_error_code = attr-defined

# - pkg_resources tests create modules that won't exists statically before the test is run.
#   Let's ignore all "import-not-found" since, if an import really wasn't found, then the test would fail.
[mypy-pkg_resources.tests.*]
disable_error_code = import-not-found

# - distutils doesn't exist on Python 3.12, unfortunately, this means typing
#   will be missing for subclasses of distutils on Python 3.12 until either:
#     - support for `SETUPTOOLS_USE_DISTUTILS=stdlib` is dropped (#3625)
#       for setuptools to import `_distutils` directly
#     - or non-stdlib distutils typings are exposed
# - All jaraco modules are still untyped
# - _validate_project sometimes complains about trove_classifiers (#4296)
# - wheel appears to be untyped
[mypy-distutils.*,jaraco.*,trove_classifiers,wheel.*]
ignore_missing_imports = True

# Even when excluding a module, import issues can show up due to following import
# https://github.com/python/mypy/issues/11936#issuecomment-1466764006
[mypy-setuptools.config._validate_pyproject.*,setuptools._distutils.*]
follow_imports = silent
# silent => ignore errors when following imports
