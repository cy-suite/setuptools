sudo: false
language: python
python:
- 2.6
- &latest_py2 2.7
- 3.3
- 3.4
- 3.5
- &latest_py3 3.6
- nightly
- pypy  # Python 2.7, PyPy 2.5.0
_base_envs:
- &linux_pyenv_base
  language: generic
  python: pypy
  os: linux
  sudo: false
  dist: trusty
  group: edge
  addons:
    apt:
      packages:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - libncursesw5-dev
      - xz-utils
      - tk-dev
  env:
  - PYTHON_VERSION=pypy2.7-5.8.0
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - &ensure_pyenv_installed |
    if [ ! -f "$PYENV_ROOT/bin/pyenv" ]
    then
      rm -rf "$PYENV_ROOT"
      curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
    fi
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    pyenv update
  - &install_python pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - &switch_python pyenv shell "$PYTHON_VERSION"
  - &python_version python --version
jobs:
  fast_finish: true
  include:
  - <<: *linux_pyenv_base
    python: pypy2.7-5.8.0
    env:
    - PYTHON_VERSION=pypy2.7-5.8.0
    - *env_pyenv
    - *env_path
  - <<: *linux_pyenv_base
    python: pypy3.5-5.8.0
    env:
    - PYTHON_VERSION=pypy3.5-5.8.0
    - *env_pyenv
    - *env_path
  - python: *latest_py3
    env: LANG=C
  - python: *latest_py2
    env: LANG=C
  - stage: deploy (to PyPI for tagged commits)
    python: *latest_py3
    install: skip
    script: skip
    before_deploy: python bootstrap.py
    deploy:
      provider: pypi
      on:
        tags: true
        all_branches: true
      user: jaraco
      password:
        secure: tfWrsQMH2bHrWjqnP+08IX1WlkbW94Q30f4d7lCyhWS1FIf/jBDx4jrEILNfMxQ1NCwuBRje5sihj1Ow0BFf0vVrkaeff2IdvnNDEGFduMejaEQJL3s3QrLfpiAvUbtqwyWaHfAdGfk48PovDKTx0ZTvXZKYGXZhxGCYSlG2CE6Y6RDvnEl6Tk8e+LqUohkcSOwxrRwUoyxSnUaavdGohXxDT8MJlfWOXgr2u+KsRrriZqp3l6Fdsnk4IGvy6pXpy42L1HYQyyVu9XyJilR2JTbC6eCp5f8p26093m1Qas49+t6vYb0VLqQe12dO+Jm3v4uztSS5pPQzS7PFyjEYd2Rdb6ijsdbsy1074S4q7G9Sz+T3RsPUwYEJ07lzez8cxP64dtj5j94RL8m35A1Fb1OE8hHN+4c1yLG1gudfXbem+fUhi2eqhJrzQo5vsvDv1xS5x5GIS5ZHgKHCsWcW1Tv+dsFkrhaup3uU6VkOuc9UN+7VPsGEY7NvquGpTm8O1CnGJRzuJg6nbYRGj8ORwDpI0KmrExx6akV92P72fMC/I5TCgbSQSZn370H3Jj40gz1SM30WAli9M+wFHFd4ddMVY65yxj0NLmrP+m1tvnWdKtNh/RHuoW92d9/UFtiA5IhMf1/3djfsjBq6S9NT1uaLkVkTttqrPYJ7hOql8+g=
      distributions: release
      skip_upload_docs: true

cache: pip

install:
# need tox to get started
- pip install tox

# Output the env, to verify behavior
- env

# update egg_info based on setup.py in checkout
- python bootstrap.py

script: tox
