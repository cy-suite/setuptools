name: tests

on:
  merge_group:
  push:
    branches-ignore:
    # temporary GH branches relating to merge queues (jaraco/skeleton#93)
    - gh-readonly-queue/**
    tags:
    # required if branches-ignore is supplied (jaraco/skeleton#103)
    - '**'
  pull_request:
  workflow_dispatch:

concurrency:
  group: >-
    ${{ github.workflow }}-
    ${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # Environment variable to support color support (jaraco/skeleton#66)
  FORCE_COLOR: 1

  # Suppress noisy pip warnings
  PIP_DISABLE_PIP_VERSION_CHECK: 'true'
  PIP_NO_PYTHON_VERSION_WARNING: 'true'
  PIP_NO_WARN_SCRIPT_LOCATION: 'true'

  # Ensure tests can sense settings about the environment
  TOX_OVERRIDE: >-
    testenv.pass_env+=GITHUB_*,FORCE_COLOR


jobs:
  test:
    strategy:
      # https://blog.jaraco.com/efficient-use-of-ci-resources/
      matrix:
        include:
        - python: pypy3.10
          platform: ubuntu-latest
          distutils: stdlib
    runs-on: ${{ matrix.platform }}
    continue-on-error: ${{ matrix.python == '3.13' }}
    env:
      SETUPTOOLS_USE_DISTUTILS: ${{ matrix.distutils || 'local' }}
    timeout-minutes: 75
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: python-install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
      - uses: actions/cache@v4
        id: cache
        with:
          path: setuptools/tests/config/downloads/*.cfg
          key: >-
            ${{ hashFiles('setuptools/tests/config/setupcfg_examples.txt') }}-
            ${{ hashFiles('setuptools/tests/config/downloads/*.py') }}
      - name: Populate download cache
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: setuptools/tests/config
        run: python -m downloads.preload setupcfg_examples.txt
      - name: Pre-build distributions for test
        shell: bash
        run: |
          rm -rf dist
          # workaround for pypa/setuptools#4333
          pipx run --pip-args 'pyproject-hooks!=1.1' build
          echo "PRE_BUILT_SETUPTOOLS_SDIST=$(ls dist/*.tar.gz)" >> $GITHUB_ENV
          echo "PRE_BUILT_SETUPTOOLS_WHEEL=$(ls dist/*.whl)" >> $GITHUB_ENV
          rm -rf setuptools.egg-info  # Avoid interfering with the other tests
      - name: Workaround for unreleased PyNaCl (pyca/pynacl#805)
        if: contains(matrix.python, 'pypy')
        run: echo "SETUPTOOLS_ENFORCE_DEPRECATION=0" >> $GITHUB_ENV
      - name: Install tox
        run: python -m pip install tox
      - name: Run
        run: tox -- -p no:xdist -v -k 'pyuri or novaclient'
      - name: Create coverage report
        if: hashFiles('.coverage') != ''  # Rudimentary `file.exists()`
        run: pipx run coverage xml --ignore-errors
      - name: Publish coverage
        if: hashFiles('coverage.xml') != ''  # Rudimentary `file.exists()`
        uses: codecov/codecov-action@v4
        with:
          flags: >-  # Mark which lines are covered by which envs
            CI-GHA,
            ${{ github.job }},
            OS-${{ runner.os }},
            VM-${{ matrix.platform }},
            Py-${{ steps.python-install.outputs.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
